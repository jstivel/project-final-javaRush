
--liquibase formatted sql


--changeset your_name:1-initial-drops
DROP TABLE IF EXISTS "user_role";
DROP TABLE IF EXISTS "contact";
DROP TABLE IF EXISTS "mail_case";
DROP TABLE IF EXISTS "profile";
DROP TABLE IF EXISTS "task_tag";
DROP TABLE IF EXISTS "user_belong";
DROP TABLE IF EXISTS "activity";
DROP TABLE IF EXISTS "task";
DROP TABLE IF EXISTS "sprint";
DROP TABLE IF EXISTS "project";
DROP TABLE IF EXISTS "reference";
DROP TABLE IF EXISTS "attachment";
DROP TABLE IF EXISTS "users";

--changeset your_name:2-create-tables
create table "project"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "code"        varchar(32)   not null unique,
  "title"       varchar(1024) not null,
  "description" varchar(4096) not null,
  "type_code"   varchar(32)   not null,
  "startpoint"  timestamp,
  "endpoint"    timestamp,
  "parent_id"   bigint,
  constraint FK_PROJECT_PARENT foreign key ("parent_id") references "project" ("id") on delete cascade
);

create table "mail_case"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email"     varchar(255) not null,
  "name"      varchar(255) not null,
  "date_time" timestamp    not null,
  "result"    varchar(255) not null,
  "template"  varchar(255) not null
);

create table "sprint"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "status_code" varchar(32)   not null,
  "startpoint"  timestamp,
  "endpoint"    timestamp,
  "title"       varchar(1024) not null,
  "project_id"  bigint        not null,
  constraint FK_SPRINT_PROJECT foreign key ("project_id") references "project" ("id") on delete cascade
);

create table "reference"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "code"       varchar(32)   not null,
  "ref_type"   smallint      not null,
  "endpoint"   timestamp,
  "startpoint" timestamp,
  "title"      varchar(1024) not null,
  "aux"        varchar(255),
  constraint UK_REFERENCE_REF_TYPE_CODE unique ("ref_type", "code")
);

create table "users"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "display_name" varchar(32)  not null unique,
  "email"        varchar(128) not null unique,
  "first_name"   varchar(32)  not null,
  "last_name"    varchar(32),
  "password"     varchar(128) not null,
  "endpoint"     timestamp,
  "startpoint"   timestamp
);

create table "profile"
(
  "id"                 bigint primary key,
  "last_login"         timestamp,
  "last_failed_login"  timestamp,
  "mail_notifications" bigint,
  constraint FK_PROFILE_USERS foreign key ("id") references "users" ("id") on delete cascade
);

create table "contact"
(
  "id"    bigint       not null,
  "code"  varchar(32)  not null,
  "value" varchar(256) not null,
  primary key ("id", "code"),
  constraint FK_CONTACT_PROFILE foreign key ("id") references "profile" ("id") on delete cascade
);

create table "task"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title"         varchar(1024) not null,
  "description"   varchar(4096) not null,
  "type_code"     varchar(32)   not null,
  "status_code"   varchar(32)   not null,
  "priority_code" varchar(32)   not null,
  "estimate"      integer,
  "updated"       timestamp,
  "project_id"    bigint        not null,
  "sprint_id"     bigint,
  "parent_id"     bigint,
  "startpoint"    timestamp,
  "endpoint"      timestamp,
  constraint FK_TASK_SPRINT foreign key ("sprint_id") references "sprint" ("id") on delete set null,
  constraint FK_TASK_PROJECT foreign key ("project_id") references "project" ("id") on delete cascade,
  constraint FK_TASK_PARENT_TASK foreign key ("parent_id") references "task" ("id") on delete cascade
);

create table "activity"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "author_id"     bigint not null,
  "task_id"       bigint not null,
  "updated"       timestamp,
  "comment"       varchar(4096),
  "title"         varchar(1024),
  "description"   varchar(4096),
  "estimate"      integer,
  "type_code"     varchar(32),
  "status_code"   varchar(32),
  "priority_code" varchar(32),
  constraint FK_ACTIVITY_USERS foreign key ("author_id") references "users" ("id"),
  constraint FK_ACTIVITY_TASK foreign key ("task_id") references "task" ("id") on delete cascade
);

create table "task_tag"
(
  "task_id" bigint      not null,
  "tag"     varchar(32) not null,
  constraint UK_TASK_TAG unique ("task_id", "tag"),
  constraint FK_TASK_TAG foreign key ("task_id") references "task" ("id") on delete cascade
);

create table "user_belong"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "object_id"      bigint      not null,
  "object_type"    smallint    not null,
  "user_id"        bigint      not null,
  "user_type_code" varchar(32) not null,
  "startpoint"     timestamp,
  "endpoint"       timestamp,
  constraint FK_USER_BELONG foreign key ("user_id") references "users" ("id")
);
create unique index UK_USER_BELONG on "user_belong" ("object_id", "object_type", "user_id", "user_type_code");
create index IX_USER_BELONG_USER_ID on "user_belong" ("user_id");

create table "attachment"
(
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name"        varchar(128)  not null,
  "file_link"   varchar(2048) not null,
  "object_id"   bigint        not null,
  "object_type" smallint      not null,
  "user_id"     bigint        not null,
  "date_time"   timestamp,
  constraint FK_ATTACHMENT foreign key ("user_id") references "users" ("id")
);

create table "user_role"
(
  "user_id" bigint   not null,
  "role"    smallint not null,
  constraint UK_USER_ROLE unique ("user_id", "role"),
  constraint FK_USER_ROLE foreign key ("user_id") references "users" ("id") on delete cascade
);

---

--changeset your_name:3-initial-references
-- (los inserts los dejamos iguales porque funcionan en H2)

----------
insert into "reference" ("code", "title", "ref_type")
values ('task', 'Task', 2), ('story', 'Story', 2), ('bug', 'Bug', 2), ('epic', 'Epic', 2),
       ('planning', 'Planning', 4), ('active', 'Active', 4), ('finished', 'Finished', 4),
       ('author', 'Author', 5), ('developer', 'Developer', 5), ('reviewer', 'Reviewer', 5), ('tester', 'Tester', 5),
       ('scrum', 'Scrum', 1), ('task_tracker', 'Task tracker', 1),
       ('skype', 'Skype', 0), ('tg', 'Telegram', 0), ('mobile', 'Mobile', 0), ('phone', 'Phone', 0), ('website', 'Website', 0), ('linkedin', 'LinkedIn', 0), ('github', 'GitHub', 0),
       ('critical', 'Critical', 7), ('high', 'High', 7), ('normal', 'Normal', 7), ('low', 'Low', 7), ('neutral', 'Neutral', 7);

insert into "reference" ("code", "title", "ref_type", "aux")
values ('assigned', 'Assigned', 6, '1'), ('three_days_before_deadline', 'Three days before deadline', 6, '2'), ('two_days_before_deadline', 'Two days before deadline', 6, '4'), ('one_day_before_deadline', 'One day before deadline', 6, '8'), ('deadline', 'Deadline', 6, '16'), ('overdue', 'Overdue', 6, '32'),
       ('todo', 'ToDo', 3, 'in_progress,canceled'), ('in_progress', 'In progress', 3, 'ready_for_review,canceled'), ('ready_for_review', 'Ready for review', 3, 'review,canceled'), ('review', 'Review', 3, 'in_progress,ready_for_test,canceled'), ('ready_for_test', 'Ready for test', 3, 'test,canceled'), ('test', 'Test', 3, 'done,in_progress,canceled'), ('done', 'Done', 3, 'canceled'), ('canceled', 'Canceled', 3, null);

---

--changeset your_name:4-update-sprint-and-task
alter table "sprint" rename column "title" to "code";
alter table "sprint" alter column "code" varchar(32) not null;
create unique index UK_SPRINT_PROJECT_CODE on "sprint" ("project_id", "code");

alter table "task" drop column "description";
alter table "task" drop column "priority_code";
alter table "task" drop column "estimate";
alter table "task" drop column "updated";

---

--changeset your_name:5-update-references-and-constraints
-- (igual que en tu script, funciona en H2)
delete from "reference" where "ref_type" = 3;

insert into "reference" ("code", "title", "ref_type", "aux")
values ('todo', 'ToDo', 3, 'in_progress,canceled'), ('in_progress', 'In progress', 3, 'ready_for_review,canceled'), ('ready_for_review', 'Ready for review', 3, 'in_progress,review,canceled'), ('review', 'Review', 3, 'in_progress,ready_for_test,canceled'), ('ready_for_test', 'Ready for test', 3, 'review,test,canceled'), ('test', 'Test', 3, 'done,in_progress,canceled'), ('done', 'Done', 3, 'canceled'), ('canceled', 'Canceled', 3, null);

alter table "activity" drop constraint FK_ACTIVITY_USERS;
alter table "activity" add constraint FK_ACTIVITY_USERS foreign key ("author_id") references "users" ("id") on delete cascade;

alter table "user_belong" drop constraint FK_USER_BELONG;
alter table "user_belong" add constraint FK_USER_BELONG foreign key ("user_id") references "users" ("id") on delete cascade;
alter table "attachment" drop constraint FK_ATTACHMENT;
alter table "attachment" add constraint FK_ATTACHMENT foreign key ("user_id") references "users" ("id") on delete cascade;

delete from "reference" where "ref_type" = 5;

insert into "reference" ("code", "title", "ref_type")
values ('project_author', 'Author', 5), ('project_manager', 'Manager', 5), ('sprint_author', 'Author', 5), ('sprint_manager', 'Manager', 5), ('task_author', 'Author', 5), ('task_developer', 'Developer', 5), ('task_reviewer', 'Reviewer', 5), ('task_tester', 'Tester', 5);

---

--changeset your_name:6-update-task-type-and-index
-- Nota: H2 no soporta índices filtrados (where ENDPOINT is null)

-- Creamos índice normal
drop index UK_USER_BELONG;
create unique index UK_USER_BELONG on "user_belong" ("object_id", "object_type", "user_id", "user_type_code");
